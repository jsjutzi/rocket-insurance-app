{"version":3,"sources":["components/RatingsInfo.tsx","components/QuotePage.tsx","assets/RocketLogo.png","components/LandingPage.tsx","App.js","index.js"],"names":["RatingsInfo","onQuoteRequested","isFetching","useState","firstName","updateFirstName","lastName","updateLastName","address1","address2","city","region","zipcode","address","updateAddress","isFormError","updateIsFormError","handleNameChange","event","target","name","value","handleAddressChange","newAddress","validateForm","useCallback","filtered","Object","values","filter","field","noSecondAddress","length","checkError","useEffect","handleSubmit","first_name","last_name","line_1","line_2","postal","StyledBody","StyledError","className","StyledForm","onSubmit","placeholder","onChange","type","onClick","styled","div","form","QuotePage","onQuoteUpdated","quote","variableOptions","variable_options","deductibleOptions","deductible","collisionOptions","asteroid_collision","variableSelections","variable_selections","selectedDeductible","updateSelectedDeductible","selectedCollision","updateSelectedCollision","currentPremium","premium","updateQuote","newQuote","parseInt","policy_holder","StyledQuote","map","option","LandingPage","showQuote","updateShowQuote","updateIsFetching","StyledHeader","src","RocketLogo","alt","quoteId","rating_address","axios","put","then","res","data","catch","err","console","log","post","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e38f71b7.chunk.js","sourcesContent":["import styled from '@emotion/styled'\n\nimport React, {useCallback, useEffect, useState} from 'react'\nimport {IRatingsInfoProps} from '../common/types'\n\n\nexport default function RatingsInfo({\n    onQuoteRequested,\n    isFetching\n}: IRatingsInfoProps) {\n    const [firstName, updateFirstName] = useState('')\n    const [lastName, updateLastName] = useState('')\n    const [address, updateAddress] = useState({\n        address1: '',\n        address2: '',\n        city: '',\n        region: '',\n        zipcode: ''\n    })\n    const [isFormError, updateIsFormError] = useState(false)\n\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const {name, value} = event.target\n        if (name === 'firstName') {\n            updateFirstName(value)\n        } else {\n            updateLastName(value)\n        }\n    }\n\n    const handleAddressChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const {name, value} = event.target\n        const newAddress = {\n            ...address,\n            [name]: value\n        }\n        updateAddress(newAddress)\n    }\n\n    const validateForm = useCallback(() => {\n        const fields: string[] = [firstName, lastName, ...Object.values(address)]\n        const filtered: string[] = fields.filter(field => !field)\n        const noSecondAddress = filtered.length === 1 && !address.address2\n\n        // Verify no field is an empty stringd unless it's address line 2\n        return filtered.length === 0 || noSecondAddress\n    }, [firstName, lastName, address])\n\n    const checkError = useCallback(() => {\n         if (isFormError && validateForm()) {\n            updateIsFormError(false)\n        }\n    }, [isFormError, validateForm])\n\n    useEffect(() => {\n        checkError()\n    }, [firstName, lastName, address, checkError])\n\n    const handleSubmit =  () => {\n        const formIsValid = validateForm()\n        if (formIsValid) {\n            const {address1, address2, city, region, zipcode} = address\n\n            onQuoteRequested({\n                first_name: firstName,\n                last_name: lastName,\n                address: {\n                    line_1: address1,\n                    line_2: address2,\n                    city: city,\n                    region: region,\n                    postal: zipcode\n                }\n            })\n        } else {\n            updateIsFormError(true)\n        }\n    }\n\n    return(\n        <>\n          <StyledBody>\n            {!isFetching && <h2>We need a few pieces of information to get your quote!</h2>}\n            {isFormError && \n            <StyledError className='error-message'>You must fill out all required fields to get a quote</StyledError>\n            }\n            {isFetching \n            ? <span>Fetching Quote...</span>\n            : <StyledForm onSubmit={handleSubmit}>\n                <div className='label-input-group'>\n                    <label>First Name:</label>\n                    <input name='firstName' placeholder='John' value={firstName} onChange={handleNameChange}></input>\n                </div>\n                <div className='label-input-group'>\n                    <label>Last Name:</label>\n                    <input name='lastName' placeholder='Smith' value={lastName} onChange={handleNameChange}></input>\n                </div>\n                <div className='label-input-group'> \n                    <label>Address Line 1:</label>\n                    <input name='address1' placeholder='123 Main St' value={address.address1} onChange={handleAddressChange} ></input>\n                </div>\n                <div className='label-input-group'>\n                    <label>Address Line 2:</label>\n                    <input name='address2' placeholder='Optional' value={address.address2} onChange={handleAddressChange}></input>\n                </div>\n                <div className='label-input-group'>\n                    <label>City:</label>\n                    <input name='city' placeholder='Dallas' value={address.city} onChange={handleAddressChange}></input>\n                </div>\n                <div className='label-input-group'>\n                    <label>Region:</label>\n                    <input name='region' placeholder='TX' onChange={handleAddressChange}></input>\n                </div>\n                <div className='label-input-group'>\n                    <label>Zip Code:</label>\n                    <input name='zipcode' placeholder='12345' value={address.zipcode} onChange={handleAddressChange}></input>\n                </div>\n                <input className='submit-button' type='button' value='Get Quote' onClick={handleSubmit}></input>\n            </StyledForm>\n            }\n          </StyledBody>\n        </>\n    )\n}\n\nconst StyledBody = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 700px;\n`\n\nconst StyledForm = styled.form`\n    margin-top: 20px;\n    display: flex;\n    flex-direction: column;\n    padding: 25px;\n    background: #ADEFD1FF;\n    color: #00203FFF;\n    border-radius: 10px;\n    -moz-box-shadow:    inset 0 0 10px #000000;\n    -webkit-box-shadow: inset 0 0 10px #000000;\n    box-shadow:         inset 0 0 10px #000000;\n\n    .label-input-group {\n        margin-top: 10px;\n\n        label {\n            display: inline-block;\n            width: 120px;\n            font-weight: bold;\n        }\n    }\n    input {\n        width: 20rem;\n        background: #F2F1F9;\n        border: none;\n        padding: 0.5rem;\n        border-radius: 10px;\n    }\n\n    .submit-button {\n        margin: auto;\n        margin-top: 20px;\n        margin-bottom: 20px;\n        background: #00203FFF;\n        font-weight: bold;\n        color: #ADEFD1FF;\n        font-size: 16px;\n        height: 50px;\n        width: 200px;\n        cursor: pointer;\n        border: 2px solid white;\n\n        :hover {\n            border: 3px solid orange;\n        }\n    }\n`\n\nconst StyledError = styled.div`\n    color: #dc3545;\n   font-size: 20px;\n`","import styled from '@emotion/styled'\n\nimport {useState} from 'react'\nimport {IQuotePageProps} from '../common/types'\n\nexport default function QuotePage({\n    onQuoteUpdated,\n    isFetching,\n    quote\n}: IQuotePageProps) {\n    // Get options for dropdowns\n    const variableOptions: Record<string, any> = quote.variable_options\n    const deductibleOptions: number[] = variableOptions.deductible.values\n    const collisionOptions: number[] = variableOptions.asteroid_collision.values\n\n    // Get state values \n    const variableSelections = quote.variable_selections\n    const [selectedDeductible, updateSelectedDeductible] = useState(variableSelections.deductible)\n    const [selectedCollision, updateSelectedCollision] = useState(variableSelections.asteroid_collision)\n    const currentPremium = quote.premium\n\n    // Get updated quote anytime selected values changes\n    const updateQuote = (event: any) => {\n        const {name, value} = event.target\n        if (name === 'deductible') {\n            updateSelectedDeductible(value)\n        } else {\n            updateSelectedCollision(value)\n        }\n\n        const newQuote = {\n            ...quote,\n            variable_selections: {\n                deductible: parseInt(selectedDeductible),\n                asteroid_collision: parseInt(selectedCollision)\n            }\n        }\n\n        onQuoteUpdated(newQuote)\n    }\n\n    return(\n        <>\n          <StyledBody>\n            {isFetching\n            ? <span>Getting Updated Quote...</span>\n            :<>\n            <h2>Here's a custom quote just for you, {quote.policy_holder.first_name}!</h2>\n            <StyledQuote>\n                <div className='quote-group'>\n                    <label>Deductible: </label>\n                    <select name='deductible' className='select' value={selectedDeductible} onChange={updateQuote}>\n                        {deductibleOptions.map((option) => {\n                            return <option key={option} value={option}>{option}</option>\n                        })}\n                    </select>\n                </div>\n                <div className='quote-group'>\n                    <label>Collision: </label>\n                    <select name='collision' className='select' value={selectedCollision} onChange={updateQuote}>\n                        {collisionOptions.map((option) => {\n                            return <option key={option} value={option}>{option}</option>\n                        })}\n                    </select>\n                </div>\n                <div className='premium-group'>\n                    <label>Annual Premium: </label>\n                    <span>${currentPremium}</span>\n                </div>\n            </StyledQuote>\n            </>\n            }\n          </StyledBody>\n        </>\n    )\n}\n\nconst StyledQuote = styled.div`\n    margin: auto;\n    margin-top: 20px;\n    background: #00203FFF;\n    color: rgb(69, 188, 229);\n    border-radius: 10px;\n    width: 500px;\n    height: 300px;\n    padding: 25px;\n    -moz-box-shadow:    inset 0 0 10px #000000;\n    -webkit-box-shadow: inset 0 0 10px #000000;\n    box-shadow:         inset 0 0 10px #000000;\n\n    .quote-group, .premium-group  {\n        display: flex;\n        font-size: 25px;\n        margin-top: 20px;\n        label {\n            width: 200px;\n            \n        }\n    }\n\n    .premium-group {\n        margin-top: 100px;\n    }\n\n    select {\n        appearance: none;\n        background-color: transparent;\n        border: none;\n        padding: 0 1em 0 0;\n        margin: 0;\n        width: 100%;\n        font-family: inherit;\n        font-size: inherit;\n        cursor: inherit;\n        line-height: inherit;\n        z-index: 1;\n        outline: none;\n    }\n\n    .select {\n        display: grid;\n        grid-template-areas: \"select\";\n        align-items: center;\n        position: relative;\n        margin-top: -2px;\n\n        select,\n        &::after {\n            grid-area: select;\n        }\n\n        min-width: 15ch;\n        max-width: 30ch;\n\n        border: 1px solid var(--select-border);\n        border-radius: 0.25em;\n        padding: 0.25em 0.5em;\n\n        font-size: 1.25rem;\n        cursor: pointer;\n        line-height: 1.1;\n        background-color: #fff;\n        background-image: linear-gradient(to top, #f9f9f9, #fff 33%);\n\n        &:not(.select--multiple)::after {\n            content: \"\";\n            justify-self: end;\n            width: 0.8em;\n            height: 0.5em;\n            background-color: var(--select-arrow);\n            clip-path: polygon(100% 0%, 0 0%, 50% 100%);\n        }\n    }\n}\n`\n\nconst StyledBody = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 700px;\n`","export default __webpack_public_path__ + \"static/media/RocketLogo.c1546fe8.png\";","import styled from '@emotion/styled'\nimport axios from 'axios'\n\nimport {useState} from 'react'\nimport RatingsInfo from './RatingsInfo'\nimport QuotePage from './QuotePage'\nimport RocketLogo from '../assets/RocketLogo.png'\n\nexport default function LandingPage() {\n    const [showQuote, updateShowQuote] = useState(false)\n    const [quote, updateQuote] = useState({})\n    const [isFetching, updateIsFetching] = useState(false)\n\n\n    const onQuoteRequested = (newQuote: Record<string, any>) => {\n        updateIsFetching(true)\n        axios.post(`https://fed-challenge-api.sure.now.sh/api/v1/quotes`, newQuote)\n        .then((res) => {\n            updateQuote(res.data.quote)\n            updateIsFetching(false)\n            updateShowQuote(true)\n        })\n        .catch(err => console.log(err))\n    }\n\n    const onQuoteUpdated = (newQuote: Record<string, any>) => {\n        // make put request to update quote\n        const {quoteId, rating_address, policy_holder, variable_selections} = newQuote\n        updateIsFetching(true)\n        axios.put(`https://fed-challenge-api.sure.now.sh/api/v1/quotes/${quoteId}`, {\n            quote: {\n                quoteId,\n                rating_address,\n                policy_holder,\n                variable_selections\n            }\n        })\n        .then(res => {\n            updateQuote(res.data.quote)\n            updateIsFetching(false)\n        })\n        .catch(err => console.log(err))\n    }\n\n    return(\n        <>\n          <StyledHeader>\n              <img src={RocketLogo} alt='rocket'/>\n              <div className='info-group'>\n                <p>Call: 555-555-5555</p>\n                <p>Email: help@rocketinsurance.com</p>\n              </div>\n          </StyledHeader>\n          {showQuote\n          ? <QuotePage isFetching={isFetching} quote={quote} onQuoteUpdated={onQuoteUpdated}/>\n          : <RatingsInfo isFetching={isFetching} onQuoteRequested={onQuoteRequested} />\n          }\n        </>\n    )\n}\n\nconst StyledHeader = styled.div`\n    display: flex;\n    background: #00203FFF;\n    width: 100%;\n    height: 180px;\n    color: white;\n    font-family: Courier New;\n\n    .info-group {\n        margin-left: 20px;\n        font-size: 18px;\n    }\n    .header-left {\n        padding-left: 20px;\n        .darken-text {\n            color: rgb(69, 188, 229);\n        }\n    }\n    .header-right {\n        padding-right: 20px;\n    }\n`","import LandingPage from './components/LandingPage'\n\nfunction App() {\n  return <div className='App'><LandingPage/></div>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}